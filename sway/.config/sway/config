# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
set $alt Mod1
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term footclient
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu bemenu-run -l 10

input type:keyboard {
    xkb_layout us,ar
    xkb_options caps:swapescape,grp:alt_shift_toggle
    repeat_delay 400
    repeat_rate 35
    xkb_numlock enabled
}
input type:touchpad {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}



### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill


# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# Startup
### Idle configuration
exec --no-startup-id swayidle -w \
         timeout 300 '/home/arrowx/.config/sway/scripts/lock.sh' \
         timeout 700 'swaymsg "output * power off"' \
         resume 'swaymsg "output * power on"' \
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
exec --no-startup-id ~/.azotebg
exec --no-startup-id ~/.local/bin/binger.sh
exec --no-startup-id nm-applet --indicator
exec --no-startup-id dunst --config ~/.config/dunst/dunstrc
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec --no-startup-id /usr/bin/snapshot-detect
# exec --no-startup-id dex -a -s /etc/xdg/autostart/:~/.config/autostart/
# GTK3 applications take a long time to start
exec --no-startup-id systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec --no-startup-id hash dbus-update-activation-environment 2>/dev/null && \
     dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec --no-startup-id wl-paste --watch cliphist store
exec --no-startup-id wlsunset -l 34.671359 -L 3.254037
exec --no-startup-id persway daemon -d stack_main
exec --no-startup-id foot -s
# Apply gtk theming
# exec --no-startup-id ~/.config/sway/scripts/import-gsettings

### Key bindings
#
# Basics:
#
default_border pixel 4
gaps inner 4
gaps outer 2
smart_borders on
focus_follows_mouse no

# Start a terminal
bindsym $mod+Return exec --no-startup-id $term

# Kill focused window
bindsym $mod+c kill

# Start your launcher
bindsym $mod+d exec --no-startup-id $menu

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+c reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

bindsym $mod+Control+space exec --no-startup-id persway stack-swap-main
bindsym $mod+Control+p exec --no-startup-id persway stack-main-rotate-next
# bindsym $mod+p exec --no-startup-id persway stack-focus-prev
# bindsym $mod+n exec --no-startup-id persway stack-focus-next
bindsym $mod+Control+c exec --no-startup-id persway change-layout stack-main --size 70 --stack-layout tiled
bindsym $mod+Control+v exec --no-startup-id persway change-layout manual
bindsym $mod+Control+x exec --no-startup-id persway change-layout stack-main --size 70
bindsym $mod+Control+z exec --no-startup-id persway change-layout spiral

set $ws1 "1:ÔÑ†"
set $ws2 "2:Óôü"
set $ws3 "3:ÔÅº"
set $ws4 "4:ÔÉ†"
set $ws5 "5:Óää"
set $ws6 "6:Ôâ©"
set $ws7 "7:Û∞Ç´"
set $ws8 "8:üñåÔ∏è"
set $ws9 "9"
set $ws10 "10"
#
# Moving around:
#
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
#
# Workspaces:
#
# Switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10
# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10
#
# Resizing containers:
#
bindsym $mod+$alt+$left resize shrink width 30px
bindsym $mod+$alt+$down resize grow height 30px
bindsym $mod+$alt+$up resize shrink height 30px
bindsym $mod+$alt+$right resize grow width 30px

# Ditto, with arrow keys
bindsym $mod+$alt+Left resize shrink width 30px
bindsym $mod+$alt+Down resize grow height 30px
bindsym $mod+$alt+Up resize shrink height 30px
bindsym $mod+$alt+Right resize grow width 30px

# Layout stuff:
#
# workspace_auto_back_and_forth yes
bindsym $mod+Control+$right workspace next
bindsym $mod+Control+$left workspace prev
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.

bindsym $mod+t split toggle

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+e layout toggle splitv splith tabbed stacking

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# open new empty workspace
# bindsym $mod+Shift+n exec --no-startup-id ~/.config/i3/scripts/empty_workspace.sh

# Redirect sound to headphones
# bindsym $mod+p exec /usr/local/bin/switch-audio-port

## App shortcuts
bindsym $mod+w exec --no-startup-id /usr/bin/$BROWSER
bindsym $mod+Shift+n exec --no-startup-id  /usr/bin/pcmanfm
# bindsym $mod+m exec --no-startup-id  /usr/bin/thunderbird

bindsym $mod+Shift+b exec --no-startup-id  ~/.local/bin/bookmark
bindsym $mod+b exec --no-startup-id  ~/.local/bin/select_bookmark -b
## Multimedia Keys
# volume
bindsym XF86AudioRaiseVolume exec --no-startup-id amixer -D pulse sset Master 5%+ && pkill -RTMIN+1 i3blocks
bindsym XF86AudioLowerVolume exec --no-startup-id amixer -D pulse sset Master 5%- && pkill -RTMIN+1 i3blocks
bindsym XF86AudioMute exec --no-startup-id amixer sset 'Master' toggle
bindsym XF86AudioPlay exec --no-startup-id ~/.local/bin/pl_dmenu play-pause
bindsym XF86AudioNext exec --no-startup-id ~/.local/bin/pl_dmenu next
bindsym XF86AudioPrev exec --no-startup-id ~/.local/bin/pl_dmenu previous
bindsym XF86AudioStop exec --no-startup-id ~/.local/bin/pl_dmenu stop

bindsym $mod+u exec --no-startup-id ~/.local/bin/pl_dmenu play-pause
bindsym $mod+shift+u exec --no-startup-id ~/.local/bin/pl_dmenu stop
bindsym $mod+bracketright exec --no-startup-id ~/.local/bin/pl_dmenu next
bindsym $mod+bracketleft exec --no-startup-id ~/.local/bin/pl_dmenu previous
bindsym $mod+p exec --no-startup-id ~/.local/bin/trackpad

# Brightness control
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl --min-val=2 -q set 3%-
bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl -q set 3%+

# Top non-standard fn keys
bindsym XF86Mail exec --no-startup-id thunderbird
bindsym XF86HomePage exec --no-startup-id $BROWSER
bindsym Print exec --no-startup-id "flameshot gui"

bindsym $mod+v exec --no-startup-id cliphist list | bemenu -l 10 | cliphist decode | wl-copy
bindsym $mod+Shift+p exec --no-startup-id ~/.config/sway/scripts/lock.sh


bindsym $mod+s+i exec --no-startup-id $term proj
bindsym $mod+s+b exec --no-startup-id $term cht.sh

# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

bindsym $mod+semicolon exec --no-startup-id  ~/.local/bin/syrun t_cmus "footclient -a t_cmus cmus &"
bindsym $mod+apostrophe exec --no-startup-id ~/.local/bin/syrun t_btop "footclient -a t_btop btop &"
bindsym $mod+grave exec --no-startup-id ~/.local/bin/syrun t_drop "footclient -a t_drop &"

for_window [app_id="t_cmus"] floating enable
for_window [app_id="t_cmus"] resize set 1200 700
for_window [app_id="t_cmus"] move position center

for_window [app_id="t_btop"] floating enable
for_window [app_id="t_btop"] resize set 1200 700
for_window [app_id="t_btop"] move position center

for_window [app_id="t_drop"] floating enable
for_window [app_id="t_drop"] resize set 1590 400
for_window [app_id="t_drop"] move position 0 0

# Title format for windows
for_window [shell="xdg_shell"] title_format "%title (%app_id)"
for_window [shell="x_wayland"] title_format "%class - %title"

assign [app_id=$term] $ws1
assign [class="Godot"] $ws2
assign [app_id="pcmanfm"] $ws3
assign [app_id="thunderbird"] $ws4
assign [app_id="com.github.johnfactotum.Foliate"] $ws5
assign [app_id="firefox"] $ws6
assign [class="firefox"] $ws6
assign [class="Blender"] $ws7
assign [class="krita"] $ws8

for_window [app_id="firefox"] focus
for_window [class="firefox"] focus
for_window [app_id=pcmanfm] focus
for_window [app_id=$term] focus
for_window [app_id=thunderbird] focus
for_window [app_id=com.github.johnfactotum.Foliate] focus
for_window [class=Godot] focus
for_window [class=Blender] focus
for_window [class=krita] focus

for_window [class="Yad" instance="yad"] floating enable
for_window [class="Galculator" instance="galculator"] floating enable
for_window [class="Blueberry.py" instance="blueberry.py"] floating enable
for_window [class="mpv"] floating enable
for_window [class="Xsane" instance="xsane"] floating enable
for_window [class="Pavucontrol" instance="pavucontrol"] floating enable
for_window [class="qt5ct" instance="qt5ct"] floating enable
for_window [class="Blueberry.py" instance="blueberry.py"] floating enable
for_window [class="Bluetooth-sendto" instance="bluetooth-sendto"] floating enable
for_window [class="Pamac-manager"] floating enable
for_window [instance="TogglDesktop"] floating enable

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.

set $dark_blue #24283b
set $white #c0caf5
set $off_white #cfc9c2
set $selected #565f89
set $red #8c4351

bar {
    font pango:FiraCode Nerd Font 12
    tray_output *
    status_command i3blocks -c ~/.config/i3blocks/i3blocks.conf
    position top
    strip_workspace_numbers no
    colors {
        background $dark_blue
        statusline $white
        separator  $selected

        focused_workspace  $selected  $selected   $white
        active_workspace   $dark_blue $selected   $white
        inactive_workspace $dark_blue $dark_blue  $off_white
        urgent_workspace   $red       $red $white
        binding_mode       $red       $red $white
    }
}
