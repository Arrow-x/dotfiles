#!/bin/zsh

alias x="exit"

alias vi='nvim'

pushit(){
	pushd "$1" >/dev/null
	nvim "$2"
	pushd -0 >/dev/null
	popd -0
}

virc(){
	pushit ~/Sources/shinyvim lazy-lock.json
}
zshrc(){
	pushit ~/dotfiles zsh/.config/zsh/.zshrc
}
zshra(){
	pushit ~/dotfiles zsh/.config/zsh/zsh-aliases
}
dfrc(){
	pushit ~/dotfiles README
}
vin(){
	pushit ~/Sources/Vault/ index.md
}
bks(){
	pushit ~/Notes-And-Tasks bookmarks
}

# Colorize grep output (good for log files)
alias grep='grep --color=auto'
alias rg='rg --color=auto'
alias egrep='grep -E --color=auto'
alias fgrep='grep -F --color=auto'

# confirm before overwriting something
alias cp="cp -i -v"
alias mv='mv -i -v'

alias trash="gio trash"
alias trash-empty="gio trash --empty --force"
alias trash-list="gio trash --list"
# alias rm='trash-put -f -v'

# ls colors
alias ls='lsd'
alias ls.='lsd -a'
alias lsl='lsd -l'
alias lsl.='lsd -l -a'

# mkdir recursiv by default
alias mkdir='mkdir -v -p'

# git
alias lg='lazygit'

gcth() {
	git log --oneline --color | fzf --multi --ansi --preview 'git show --color {+1} | diff-so-fancy' --bind 'enter:execute(git diff {+1}~ {+1} | diff-so-fancy | bat --plain)'
}

#yt-dlp usage
alias ydl='yt-dlp  --embed-metadata'
alias ydlm='yt-dlp --embed-thumbnail --embed-metadata -f 140'
alias ydla='yt-dlp --embed-metadata -f 250'
alias ydlF='yt-dlp -F'
alias ydlf='yt-dlp --embed-thumbnail --embed-metadata -f'
alias ydl720webm='yt-dlp --embed-metadata -f 247+251'
alias ydl720mp4='yt-dlp --embed-thumbnail --embed-metadata --embed-chapters --embed-subs -f 136+140'

changewalln() {
	find "/home/arrowx/Pictures/Wallpapers" -type f -printf "%T+ %p\n" | sort -r | sed "s#.*/home#/home#" | nsxiv -o -i | read -r pic; [ -n "$pic" ] && set_bg "$pic"
}


#Mpv
alias mpv4='mpv --profile=480p --really-quiet --no-terminal'
# alias mpv7='mpv --profile=720p --really-quiet --no-terminal'
alias mpv7='mpv --profile=720pmp4 --really-quiet --no-terminal'
alias mpv18='mpv --profile=1080p --really-quiet --no-terminal'
alias mpva='mpv --profile=a'

#Weather
alias wttr="curl 'https://wttr.in/Djelfa.Djelfa'"

alias tmuxfo="export TERM='foot-direct'; tmux"

#fzf usages
fdrc() {
	fd -t $1 --color=always | fzf --ansi -i
}

pcd() {
	cd "$(fdrc d)"
}

open() {
	getpt f | xargs -I _ setsid -f $OPENER _ >/dev/null 2>&1
}

cppt() {
	fdrc $1 |  tr -d '\n' | xclip -selection c
}

getpt() {
	fdrc $1 | sed 's/"/\\"/g' | sed 's/^/"/;s/$/"/' | tr -d '\n'
}

alias openc="find ~/File/Comics/ -mindepth 2 -type d | sort | fzf_preview"
alias openm="find -L ~/Music -name '*.mp3' -or -name '*.webm' -or -name '*.m4a' | fzf_preview"
alias openv="find ~/Videos -name '*.mp4' -or -name '*.mkv' | fzf_preview"

#show installed packages and sort them by installed date
pacsd() {
	expac --timefmt='%Y-%m-%d %T' '%l\t%n' | sort | tail -n "$1"
}

#Show all installed packages
pacsa() {
	yay -Qq | fzf --preview 'yay -Qil {}' --layout=reverse --bind 'enter:execute(yay -Qil {} | less)'
}

pacei() {
	yay -Qetq | fzf --preview 'yay -Qil {}' --layout=reverse --bind 'enter:execute(yay -Qil {} | bat -n)'
}

#delelte all orphans
alias pacdo='yay -Qtdq | yay -Rns -'

#use yay to make package explicitly installed
alias pacme='yay -S --asexplicit'

# For when keys break
alias pacman-fix-keys="sudo pacman-key --init && sudo pacman-key --populate archlinux && sudo pacman-key --refresh-keys"

t() {
	termdown "$1"m ; notify-send "$2" ; mpv --really-quiet "/home/arrowx/Music/Killer Instinct The Complete Soundtrack (2017)/The Instinct.mp3"
}

alias aria='aria2c --check-integrity=true'

alias df="df -h | sed '/tmpfs/d' | sed '/var/d'"     # human-readable sizes
alias free='free -m'                                 # show ram usage in MB
alias du='du -h'

# get top process eating memory
alias psmem='ps auxf | sort -nr -k 4 | head -5'

# get top process eating cpu ##
alias pscpu='ps auxf | sort -nr -k 3 | head -5'

pass-gen() {
	pass generate "$1"; pass edit "$1"

}

lf() {
    dir=$(command lf -print-last-dir "$@")
    while ! cd "$dir" 2> /dev/null
    do
        dir=$(dirname "$dir")
    done
	awk '$1 == "archivemount" { print $2 }' /etc/mtab | sed 's/\\040/ /g' | while read -r mntdir; do
		umount "$mntdir"
		rmdir "$mntdir"
	done
}

function y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

alias wget=wget --hsts-file="$XDG_DATA_HOME/wget-hsts"
alias abook=abook --config "$XDG_CONFIG_HOME"/abook/abookrc --datafile "$XDG_DATA_HOME"/abook/addressbook
