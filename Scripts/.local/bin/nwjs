#!/bin/sh

IS_RPGMV=false
IS_RPGMZ=false

#test to avoid accidental and irreversible deletion of files and directories
if [ -d "www" ] && [ -f "package.json" ]; then
	echo "This looks like an RPGMV Game."
	IS_RPGMV=true
elif
	[ -d "audio" ] &&
		[ -d "css" ] &&
		[ -d "data" ] &&
		[ -d "effects" ] &&
		[ -f "package.json" ] &&
		[ -d "fonts" ] &&
		[ -d "img" ] &&
		[ -d "icon" ] &&
		[ -d "js" ] &&
		[ -d "swiftshader" ] &&
		[ -d "locales" ]
then
	echo "This looks like an RPGMZ Game."
	IS_RPGMZ=true
fi

if [ $IS_RPGMV = false ] && [ $IS_RPGMZ = false ]; then
	echo "This doesn't look like nwjs program"
	exit 1
fi

start_game=1
use_old_nwjs=0
old_version="v0.94.1"
ci=1

usage() { #help message
	echo "This program converts a Windows version of an NW.js program into its Linux counterpart."
	echo "The Linux version is not guaranteed to work and a backup of the Windows version is always advised. You've been warned!"
	echo "The installation process takes a while. Don't worry if almost everything disappears from the directory and then nothing seems to happen. It's normal."
	echo ""
	echo "Parameters:"
	echo "  -h, --help                  Shows this message and exits"
	echo "  -ns, --no-start             Doesn't start the game after the installation"
	echo "  -o, --old                   Use NWJS v0.71.0"
	echo "  -ci, --case-insensitive     set up a case insensitive game data folder"
}

while [ "$1" != "" ]; do #positional parameters
	case $1 in
		-h | --help)
			usage
			exit
			;;
		-ns | --no-start) #doesn't start the game after the installation
			start_game=0
			;;
		-o | --old)
			use_old_nwjs=1
			;;
		-ci | --case-insensitive)
			ci=1
			;;
		*)
			usage
			exit 1
			;;
	esac
	shift
done

chmod +w .
echo "removes unneeded files ..."
if $IS_RPGMV; then
	find . -maxdepth 1 -not -name "." -not -name "nw.pak" -not -name "package.json" -not -name "www" -not -name "css" -not -name "data" -not -name "csv" -not -name "*.xlsx" -print0 | xargs -0 -r rm -r --
elif $IS_RPGMZ; then
	rm -r locales swiftshader ./*.exe ./*.dat ./*.dll ./*.pak ./*.bin credits.html
fi

if [ "$use_old_nwjs" -eq 1 ]; then
	version="$old_version"
else
	version="$(wget https://dl.nwjs.io/ -q -O - | tail -n -5 | head -n 1 | sed -E 's#.*href="(.*)\/".*#\1#')"
fi

parent_dir_name="/home/arrowx/File/Homework/tools/"

dir_name="nwjs-""$version""-linux-x64"
file_name="$dir_name"".tar.gz"
destination="$parent_dir_name""$file_name"
link="https://dl.nwjs.io/""$version""/""$file_name"

mkdir --parents "$parent_dir_name"

if [ "$use_old_nwjs" -eq 0 ]; then
	echo "downloading/checking the correct NW.js for your computer ..."
	wget "$link" --continue --output-document "$destination"
fi
echo 'copying NWjs ...'
cp "$destination" .

echo 'extracting ...'
tar -xzf "$file_name"

echo "files are in a directory, moving them in the right place ..."
mv "$dir_name"/* .

echo "cleaning useless file and directory ..."
rm -r "$dir_name"
rm "$file_name"

if [ ! -x "nw" ]; then
	echo "checks if the game launcher is actually executable ..."
	chmod +x nw
fi

if [ "$ci" -eq 1 ]; then
	echo "setting up data to be case insensitive ..."
	if $IS_RPGMV; then
		mv www/ www_cs/
		mkdir www
		echo "creating launcher script ..."
		touch playme.sh
		{
			echo "#!/bin/sh"
			echo "cicpoffs www_cs www"
			echo "./nw"
			echo "umount -l img"
		} >playme.sh

	elif $IS_RPGMZ; then
		mv img/ img_cs/
		mkdir img
		echo "creating launcher script ..."
		touch playme.sh
		{
			echo "#!/bin/sh"
			echo "cicpoffs img_cs img"
			echo "./nw"
			echo "umount -l img"
		} >playme.sh
	fi
	chmod +x playme.sh
	if [ $start_game -eq 1 ]; then
		echo "Running the game ..."
		./playme.sh
	fi
	exit 0
fi

if [ $start_game -eq 1 ]; then
	echo "Running the game ..."
	./nw
fi
