# vim: filetype=sh
# Basic Settings
set hidden true
set ignorecase true
set icons true

set shell zsh
set shellopts '-euy'
set ifs "\n"
set filesep "\n"  # default already

# Custom Functions
cmd mkdir %{{
  printf "Directory Name: "
  read ans
  mkdir -p $ans
  lf -remote "send select \"$ans\""
}}

cmd mkfile %{{
  printf "File Name: "
  read ans
  touch $ans
  lf -remote "send select \"$ans\""
}}

# Custom Functions
cmd setwallpaper %nitrogen --set-zoom-fill --save "$f" >/dev/null 2>&1

# Archive bindings
cmd unarchive ${{
 case "$fx" in
#      *.zip) unzip "$fx" ;;
      *.tar.gz) tar -xvf "$fx" ;;
      *.tar.bz2) tar -xvf "$fx" ;;
      *.tar.xz) tar -xvf "$fx" ;;
      *.tar) tar -xvf "$fx" ;;
      *) for arc in $fx 
      do
        7z x "$arc"
      done;;
  esac
}}

# all of this just to disable the flickering
cmd open %setsid -f sh -c '(case $(mimetype -M -b "$f") in application/x-sharedlib) (setsid -f "$f" >/dev/null 2>&1);; application/x-shellscript) (setsid -f "$f" >/dev/null 2>&1);; application/x-executable) (setsid -f "$f" >/dev/null 2>&1);; application/x-object) (setsid -f "$f" >/dev/null 2>&1);; *) (setsid -f mimeopen -n "$f" >/dev/null 2>&1);; esac)' >/dev/null 2>&1

# Trash bindings
cmd trash ${{
  files=$(printf "$fx" | tr '\n' ';')
  while [ "$files" ]; do
    file=${files%%;*}

    trash-put -v "$(basename "$file")"
    if [ "$files" = "$file" ]; then
      files=''
    else
      files="${files#*;}"
    fi
  done
}}

cmd restore_trash ${{
  trash-restore
}}

cmd bulkrenamevimv ${{
  vimv --git -- $fx
  lf -remote "send $id load"
  lf -remote "send $id unselect"
}}

cmd chmod_plus_x %{{
  chmod +x $fx
  lf -remote "send $id reload"
}}

cmd chmod_minus_x %{{
  chmod -x $fx
  lf -remote "send $id reload"
}}

cmd link %{{
    set -- $(cat ~/.local/share/lf/files)
    mode="$1"
    shift
    if [ "$#" -lt 1 ]; then
        lf -remote "send $id echo no files to link"
        exit 0
    fi
    case "$mode" in
        # symbolically copy mode is indicating a soft link
        copy) ln -sr -t . -- "$@";;
        # while a move mode is indicating a hard link
        move) ln -t . -- "$@";;
    esac
    rm ~/.local/share/lf/files
    lf -remote "send clear"
}}

cmd tagfiles %{{
    TAGS=$(tmsu tags | dmenu -l 4 -g 5 -p "Tag" | sed "s/,/\n/g")

    if [ -z $TAGS ]; then
      exit 1
    fi

    for f in $fx; do
        echo $TAGS | xargs tmsu tag $f
    done
}}

map P :link

cmd dragon %dragon-drop -a -x $fx
cmd dragon-stay %dragon-drop -a $fx
cmd dragon-individual %dragon-drop $fx
cmd cpdragon %cpdragon
cmd mvdragon %mvdragon
cmd dlfile %dlfile

# Bindings
# Dragon Mapping
map dr dragon
map ds dragon-stay
map di dragon-individual
map dm mvdragon
map dc cpdragon
map dl dlfile

# Remove some defaults
map m
# map o
map "'"
map '"'
map d
map w
map r

map au unarchive

map mx chmod_plus_x
map mX chmod_minus_x
map mt tagfiles $fx
map md mkdir
map mf mkfile
map mw setwallpaper

# Basic Functions
map . set hidden!
map DD delete
map p paste
map x cut
map y copy
map R reload
map C clear
map b bulkrenamevimv

map rA rename
map rI push rA<c-a>
map rw push rA<a-b><a-b><a-f>
map rd push rA<c-u>

map dd trash
map dR restore_trash

# Movement
map gD cd ~/File/Documents
map gd cd ~/Downloads
map gp cd ~/Public
map glb cd ~/.local/bin
map gls cd ~/.local/share
map glt cd ~/.local/state
map gc cd ~/.config
map gf cd ~/File
map gH cd ~/File/Homework/H-Games
map gP cd ~/File/Projects
map gt cd ~/File/Tutorials
map gm cd /run/media/arrowx/

map grr cd ~/File/Examples\ and\ Refrences
map gra cd ~/File/Examples\ and\ Refrences/AnimeArt/Random/
map grp cd ~/File/Examples\ and\ Refrences/pixel\ art
map grn cd ~/File/Examples\ and\ Refrences/NPR
map grc cd ~/File/Examples\ and\ Refrences/Cool\ 3d

set previewer ~/.config/lf/previewer.sh
set cleaner ~/.config/lf/clear_img.sh
