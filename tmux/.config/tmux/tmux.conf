set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

set -g history-limit 10000
set -g mouse on
# Neovim thing
set -g escape-time 10
set -g focus-events on
# set -g default-terminal "${TERM}"
# Start counting panes from one 
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on
set -g status-position bottom
set -g detach-on-destroy off

# Undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# Emulate scrolling by sending up and down keys if these commands are running in the pane
tmux_commands_with_legacy_scroll="nano less more man git"

bind-key -T root WheelUpPane \
	if-shell -Ft= '#{?mouse_any_flag,1,#{pane_in_mode}}' \
		'send -Mt=' \
		'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
			"send -t= Up" "copy-mode -et="'

bind-key -T root WheelDownPane \
	if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
		'send -Mt=' \
		'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
			"send -t= Down" "send -Mt="'

set-window-option -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard' 

# unbind C-b
# unbind C-s
# set -g prefix  C-s
# bind C-s send-prefix

bind r source-file ~/.config/tmux/tmux.conf \; display "Reloading tmux config"

# vim-like pane switching
bind -r ^ last-window
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R

bind -r M-k resize-pane -U 5
bind -r M-j resize-pane -D 5
bind -r M-h resize-pane -L 5
bind -r M-l resize-pane -R 5

bind-key - split-window -v -c "#{pane_current_path}"
bind-key \\ split-window -h -c "#{pane_current_path}"

# bind -n C-M-h previous-window
# bind -n C-M-l next-window

# switch windows alt+number
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

bind N new-window -c "#{pane_current_path}"

bind-key -r o run-shell "tmux new-window ~/.local/bin/tmux-sessionizer -se ;tmux rename-window tmux-sessionizer"
bind-key -r O run-shell "tmux new-window ~/.local/bin/tmux-sessionizer -scd ;tmux rename-window tmux-sessionizer"
bind-key -r y run-shell "tmux new-window ~/.local/bin/tmux-sessionizer -we ;tmux rename-window tmux-sessionizer"
bind-key -r Y run-shell "tmux new-window ~/.local/bin/tmux-sessionizer -wcd ;tmux rename-window tmux-sessionizer"
bind-key -r m run-shell "tmux new-window ~/.local/bin/cht.sh; tmux rename-window cht.sh"
bind-key -r h run-shell "tmux new-session -ds 'Home' -c ~; tmux switch-client -t 'Home'"
bind-key -r f run-shell "tmux new-session -ds 'lf' lf -c ~; tmux switch-client -t 'lf'"
bind-key -r v run-shell "tmux new-session -ds 'Notes' -c ~/Notes-And-Tasks/Obsidian/.local/share/Obsidian/ nvim index.md; tmux switch-client -t 'Notes'"
set -g @sessionx-bind 's' 

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'omerxx/tmux-sessionx'
set -g @plugin "janoamaral/tokyo-night-tmux"
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.local/share/tmux/plugins/tpm/tpm'

# tokyo-night-tmux
set -g @tokyo-night-tmux_show_music 1
